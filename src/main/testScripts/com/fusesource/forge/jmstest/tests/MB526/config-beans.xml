<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd" >

  <!-- This will try to locate a BrokerServiceFactory and initialize all brokers there -->
  <bean id="brokerServicesFactory" class="com.fusesource.forge.jmstest.config.impl.SpringBrokerServicesFactory" />
  
  <!--  ============================================================================================================================ -->
  <!--  How we will create Producers -->
  <!-- The configuration of a Producer prototype bean-->
  <bean id="messageProducer" class="com.fusesource.forge.jmstest.executor.BenchmarkProducer" scope="prototype" >
    <property name="connectionProvider" ref="connectionProvider" />
    <property name="destinationProvider" ref="destinationProvider" />
    <property name="messageFactory" ref="messageFactory" />
  </bean>
  
  <!-- The factory used to create producers -->
  <bean id="messageProducerFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
    <property name="targetBeanName">
      <idref local="messageProducer"/>
    </property>
  </bean>

  <!--  ============================================================================================================================ -->
  
  <!-- A benchmark iteration runner is used to run enough producers in order to sustain a given message load -->
  <bean id="benchmarkIterationRunner" class="com.fusesource.forge.jmstest.executor.IterationRunner" scope="prototype">
    <property name="producerFactory" ref="messageProducerFactory"/>
    <property name="testRunConfig" ref="TestConfig" />
    <property name="iteration" ref="testProfile" />
    <property name="probe" ref="ProducerMsgCounter" />
  </bean>

  <!-- The factory used to create the runner -->
  <bean id="benchmarkProfileRunnerFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
    <property name="targetBeanName">
      <idref local="benchmarkIterationRunner"/>
    </property>
  </bean>

  <!--  ============================================================================================================================ -->

  <!-- The Benchmarkproducer wraps up creating and initializing the profile runner to execute the benchmark 
       from the producer side -->
  <bean id="benchmarkProducer" class="com.fusesource.forge.jmstest.executor.BenchmarkProducerWrapper">
    <property name="profileRunnerFactory" ref="benchmarkProfileRunnerFactory" /> 
    <property name="maxWaitTime" value="10" />
  </bean>
  
  <!--  ============================================================================================================================ -->

  <!-- The Benchmark Consumer is a simple JMS consumer consuming messages from the test destination. -->
  
  <bean id="messageConsumer" class="com.fusesource.forge.jmstest.executor.BenchmarkConsumer" scope="prototype" >
    <property name="connectionProvider" ref="connectionProvider" />
    <property name="destinationProvider" ref="destinationProvider" />
    <property name="probeRunner" ref="ConsumerProbeRunner" />
  </bean>

  <!--  The consumer factory is responsible for creating the consumers upon request -->
  <bean id="messageConsumerFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
    <property name="targetBeanName">
      <idref local="messageConsumer"/>
    </property>
  </bean>
 
  <!-- The BenchmarkConsumerWrapper encapsulates the creation of the desired number of consumers.  --> 
  <bean id="messageConsumerWrapper" class="com.fusesource.forge.jmstest.executor.BenchmarkConsumerWrapper" >
    <property name="consumerFactory" ref="messageConsumerFactory" />
    <property name="RRDController" ref="ConsumerRRD" />
  </bean>  
</beans>
